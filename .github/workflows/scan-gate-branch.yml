# This workflow can be triggered to scan a branch and evaluate gates.
# The workflow will fail if Pending IDs or Policy Violations are found.

name: Scan Branch and Evaluate Gates

on: workflow_dispatch

jobs:
  workbench-scan:
    runs-on: ubuntu-latest
    env:
      WORKBENCH_URL: ${{ secrets.WORKBENCH_URL }}
      WORKBENCH_USER: ${{ secrets.WORKBENCH_USER }}
      WORKBENCH_TOKEN: ${{ secrets.WORKBENCH_TOKEN }}
    steps:
    - name: Scan by Cloning from Git
      run: |
        docker run ghcr.io/tomgonzo/workbench-cli:latest \
        --api-url ${{ env.WORKBENCH_URL }} \
        --api-user ${{ env.WORKBENCH_USER }} \
        --api-token ${{ env.WORKBENCH_TOKEN }} \
        scan-git \
        --project-name $GITHUB_REPOSITORY \
        --scan-name $GITHUB_REF_NAME \
        --git-url $GITHUB_SERVER_URL/$GITHUB_REPOSITORY \
        --git-branch $GITHUB_REF_NAME \
        --git-depth 1 \
        --id-reuse \
        --id-reuse-type project \
        --id-reuse-source $GITHUB_REPOSITORY \
        --run-dependency-analysis \
        --autoid-file-licenses \
        --autoid-file-copyrights \
        --no-wait

  workbench-gates:
    needs: workbench-scan
    runs-on: ubuntu-latest
    env:
      WORKBENCH_URL: ${{ secrets.WORKBENCH_URL }}
      WORKBENCH_USER: ${{ secrets.WORKBENCH_USER }}
      WORKBENCH_TOKEN: ${{ secrets.WORKBENCH_TOKEN }}
    steps:
    - name: Evaluate Gates; Fail on Issues
      run: |
        docker run ghcr.io/tomgonzo/workbench-cli:latest \
        --api-url ${{ env.WORKBENCH_URL }} \
        --api-user ${{ env.WORKBENCH_USER }} \
        --api-token ${{ env.WORKBENCH_TOKEN }} \
        evaluate-gates \
        --project-name $GITHUB_REPOSITORY \
        --scan-name $GITHUB_REF_NAME \
        --fail-on-pending \
        --fail-on-policy
